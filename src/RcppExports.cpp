// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// powerSparseProduct
Rcpp::List powerSparseProduct(const Eigen::MappedSparseMatrix<double>& mRe, const Eigen::MappedSparseMatrix<double>& mIm, const Eigen::MappedSparseMatrix<double>& mSp);
RcppExport SEXP powerr_powerSparseProduct(SEXP mReSEXP, SEXP mImSEXP, SEXP mSpSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const Eigen::MappedSparseMatrix<double>& >::type mRe(mReSEXP );
        Rcpp::traits::input_parameter< const Eigen::MappedSparseMatrix<double>& >::type mIm(mImSEXP );
        Rcpp::traits::input_parameter< const Eigen::MappedSparseMatrix<double>& >::type mSp(mSpSEXP );
        Rcpp::List __result = powerSparseProduct(mRe, mIm, mSp);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// rcppeigen_hello_world
Eigen::MatrixXd rcppeigen_hello_world();
RcppExport SEXP powerr_rcppeigen_hello_world() {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Eigen::MatrixXd __result = rcppeigen_hello_world();
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// rcppeigen_outerproduct
Eigen::MatrixXd rcppeigen_outerproduct(const Eigen::VectorXd& x);
RcppExport SEXP powerr_rcppeigen_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type x(xSEXP );
        Eigen::MatrixXd __result = rcppeigen_outerproduct(x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// rcppeigen_innerproduct
double rcppeigen_innerproduct(const Eigen::VectorXd& x);
RcppExport SEXP powerr_rcppeigen_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type x(xSEXP );
        double __result = rcppeigen_innerproduct(x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// rcppeigen_bothproducts
Rcpp::List rcppeigen_bothproducts(const Eigen::VectorXd& x);
RcppExport SEXP powerr_rcppeigen_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type x(xSEXP );
        Rcpp::List __result = rcppeigen_bothproducts(x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
